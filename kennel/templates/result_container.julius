
function ResultContainer(id, settings_id) {
  var self = this;

  this.id = id;
  this.settings_id = settings_id;
  this.name = 1;
  this.running = false;

  $(this.settings_id).find('input.nowrap-output-window').change(function(e) {
    var content = $(self.id + ' .tab-content');
    $(e.target).prop('checked') ? content.addClass('nowrap') : content.removeClass('nowrap')
    if (self.result_changed)
        self.result_changed();
  });
  $(this.settings_id).find('input.expand-output-window').change(function(e) {
    var content = $(self.id + ' .tab-content');
    $(e.target).prop('checked') ? content.addClass('expand') : content.removeClass('expand')
    if (self.result_changed)
        self.result_changed();
  });
}

ResultContainer.prototype._nav_tabs = function() {
  return $(this.id + ' .tabbable ul');
}

ResultContainer.prototype._tab_content = function() {
  return $(this.id + ' .tab-content');
}

ResultContainer.prototype._next_name = function() {
  var name = this.name + '';
  this.name += 1;
  return name;
}

ResultContainer.prototype._post_init = function(compiler, code, name) {
  var self = this;

  var TAB_PREFIX = 'result-container-tab-';

  var id_name = TAB_PREFIX + name;
  var tab = $('<li><button type="button" class="close" href="#">&times;</button><a data-toggle="tab" href="#' + id_name + '">#' + name + '</a></li>');
  var content = $('<div class="tab-pane active result-window" id="' + id_name + '">');

  var close = tab.find('.close');
  close.click(function() {
    if (tab.hasClass('active')) {
      tab.prev().find('a').tab('show');
      tab.next().find('a').tab('show');
    }
    tab.remove();
    content.remove();
  });

  this._nav_tabs().prepend(tab);
  this._tab_content().prepend(content);

  tab.find('a').tab('show');

  var result_window = new ResultWindow('#' + id_name);
  result_window.onfinish = function() {
    self.running = false;
    if (self.onfinish)
      self.onfinish();
  };
  return result_window;
}

ResultContainer.prototype.post_code = function(compiler, code, stdin) {
  if (this.running) {
    return;
  }
  this.running = true;

  var result_window = this._post_init(compiler, code, this._next_name());
  result_window.post_code(compiler, code, stdin);
}

ResultContainer.prototype.set_code = function(compiler, code, stdin, outputs) {
  var result_window = this._post_init(compiler, code, 'permlink');
  result_window.set_code(compiler, code, stdin, outputs);
}

ResultContainer.prototype.expand = function(value) {
  var eexpand = $(this.settings_id).find('input.expand-output-window');
  eexpand.prop('checked', value);
  return eexpand;
}

ResultContainer.prototype.serialize = function() {
  return {
    nowrap: $(this.settings_id).find('input.nowrap-output-window').prop('checked'),
    expand: $(this.settings_id).find('input.expand-output-window').prop('checked'),
  };
}

ResultContainer.prototype.deserialize = function(settings) {
  var enowrap = $(this.settings_id).find('input.nowrap-output-window');
  enowrap.prop('checked', settings.nowrap);

  var eexpand = this.expand(settings.expand);

  enowrap.change();
  eexpand.change();
}
