function decode_qp(str) {
  var dec = str.replace(/=/g, '%');
  return decodeURIComponent(dec);
}

function parse(str) {
  var index = str.indexOf(':');
  return {
    type: str.substring(0, index).split(' ')[0],
    message: str.substring(index + 1),
  };
}

function post_code() {
  var url = $('#compile').attr('href');
  var code = $('#code').val();

  $.post('@{CompileR sourceId}', { code: code }, function() { });
}

$(function() {
  absUrl = '@{SourceR sourceId}';
  src = new EventSource($.url(absUrl).attr('path'));
  src.onmessage = function(msg) {
    data = parse(decode_qp(msg.data));
    $('<p>').html(data.message)
            .addClass(data.type)
            .appendTo('#output');
    $('#output')[0].scrollTop = $('#output')[0].scrollHeight;
  };
  
  $('#compile').click(function(event) {
    event.preventDefault();
    post_code();
  });
  $('#code').keydown(function(event) {
    if (event.keyCode == 10 ||
        event.keyCode == 13 && event.ctrlKey) {
      event.preventDefault();
      post_code();
    }
  });
});

