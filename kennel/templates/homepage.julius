USING_PERMLINK = #{usingPermlink}

function decode_uri(str) {
  return decodeURIComponent(str);
}

function post_code(compiler, result_container) {
  $('#compile').hide();
  $('#compiling').show();

  var editor = new Editor('#editor', '#editor-settings');
  var code = editor.getValue();

  result_container.post_code(compiler, code);
}

function update_compile_command(compiler) {
  var command = compiler.get_selected_compiler_element().attr('command');
  var compiler_name = compiler.get_selected_compiler_element().text();
  var compile_options = compiler.get_checked_compile_options().map(function(n,e) { return $(e).attr('flags'); });

  $('#compiler_name').text(compiler_name);

  var compile_command = '$ ' + command + ' ' + compile_options.get().join(' ');
  $('#compile_command').html($('<code>').text(compile_command));
}

function save(key, value) {
  $.cookie(key, value, { expires: 365 });
}

$(function() {
  $.cookie.json = true;

  var result_container = new ResultContainer('#result-container')
  result_container.onfinish = function() {
    $('#compile').show();
    $('#compiling').hide();
  };

  $('#compile').click(function(event) {
    event.preventDefault();
    post_code(compiler, result_container);
  });
  $('#compiling').hide();

  var editor = new Editor('#editor', '#editor-settings');
  editor.onrun = function() {
    post_code(compiler, result_container);
  };
  editor.editor_changed = function() {
    save('wandbox.editor', editor.serialize());
    if (editor.is_legacy()) {
      $('#compile').text('Run');
    } else {
      $('#compile').text('Run (or Ctrl+Enter)');
    }
  };

  // create compiler
  var compiler = new Compiler('#compiler', '#compile-options');
  compiler.compiler_changed = function() {
    if (!USING_PERMLINK)
      save('wandbox.compiler.current', compiler.serialize_current());

    update_compile_command(compiler);

    var lang = compiler.get_selected_compiler_element().attr('language');
    editor.setLanguage(lang);
  };
  compiler.compile_option_changed = function() {
    if (!USING_PERMLINK)
      save('wandbox.compiler.current', compiler.serialize_current());

    update_compile_command(compiler);
  };

  // deserialize if settings is stored in the cookie.
  var compiler_settings = $.cookie('wandbox.compiler.current');
  if (compiler_settings) {
    compiler.deserialize(compiler_settings);
    var editor_settings = $.cookie('wandbox.editor');
    if (editor_settings)
      editor.deserialize(editor_settings);
  } else {
    // select default compiler
    compiler.set_compiler(#{defaultCompiler});
  }


  // deserialize if code exists.
  var code = #{jsonCode};
  if (code != null) {
    editor.setValue(decode_uri(code.code));

    compiler.deserialize({
      compiler: decode_uri(code.compiler),
      compile_options: decode_uri(code.options),
    });

    result_container.set_code(compiler, decode_uri(code.code), code.outputs);
  }

  update_compile_command(compiler);

  editor.focus();
});

