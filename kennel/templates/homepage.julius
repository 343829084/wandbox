var vim_handler = require("ace/keyboard/vim").handler
var keybindings = {
    ace: null,
    vim: vim_handler,
    emacs: "ace/keyboard/emacs",
};

var EDITOR_MODE_MAPPING = {
  'C++': 'ace/mode/c_cpp',
  'Ruby': 'ace/mode/ruby',
  'Python': 'ace/mode/python',
  'Perl': 'ace/mode/perl',
  'Erlang': 'ace/mode/erlang',
  'C#': 'ace/mode/csharp',
  'Haskell': 'ace/mode/haskell',
}
function get_editor_mode(lang) {
  return EDITOR_MODE_MAPPING[lang]
}

function decode_uri(str) {
  return decodeURIComponent(str);
}

function post_code(compiler, result_container) {
  var code = ace.edit('editor').getValue();

  result_container.post_code(compiler, code);
}

function update_compile_command(compiler) {
  var command = compiler.get_selected_compiler_element().attr('command');
  var compile_options = compiler.get_checked_compile_options().map(function(n,e) { return $(e).attr('flags'); });

  var compile_command = '$ ' + command + ' ' + compile_options.get().join(' ');
  $('#compile_command').html('<code>' + compile_command + '</code>');
}

$(function() {
  var result_container = new ResultContainer('#result-container')

  $('#compile').click(function(event) {
    event.preventDefault();
    post_code(compiler, result_container);
  });

  var editor = ace.edit("editor");
  editor.setTheme("ace/theme/textmate");
  $("#keybinding").change(function() {
    var value = $(this).val();
    editor.setKeyboardHandler(keybindings[value]);
  }).change();

  editor.focus();

  editor.commands.addCommand({
    name: 'run',
    bindKey: { win: 'Ctrl-Enter',  mac: 'Ctrl-Enter' },
    exec: function(editor) {
      post_code(compiler, result_container);
    },
    readOnly: true
  });
  vim_handler.actions['ctrl-return'] = {
    fn: function(editor, range, count, param) {
      post_code(compiler, result_container);
    },
  };

  // set code
  var code = decode_uri(#{urlEncode $ codeCode code});
  editor.setValue(code);
  editor.setShowPrintMargin(false);

  // set compiler
  var compiler = new Compiler('#compiler', '#compile-options');
  compiler.compiler_changed = function() {
    update_compile_command(compiler);
    editor.getSession().setMode(get_editor_mode(lang));
  };
  compiler.compile_option_changed = function() {
    update_compile_command(compiler);
  };

  compiler.deserialize(
    decode_uri(#{urlEncode $ codeCompiler code}),
    ''
  );
});

